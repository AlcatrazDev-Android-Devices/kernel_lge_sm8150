name: "Build kernel"

on:
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup build env
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential ccache curl flex \
          g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev \
          lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev \
          libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc \
          zip zlib1g-dev python3 python3-pip python3-pexpect python3-setuptools python3-serial python3-yaml \
          python-is-python3 git zstd lld
      - name: Cache build env
        id: cache-build-env
        uses: actions/cache@v3
        with:
          path: |
            clang
          key: ${{ runner.os }}-android-toolchain

      - name: Pull Android toolchain
        if: steps.cache-build-env.outputs.cache-hit != 'true'
        run: |
          wget -q "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.8/clang+llvm-18.1.8-aarch64-linux-gnu.tar.xz"
          mkdir clang && tar xvJf clang+llvm-18.1.8-aarch64-linux-gnu.tar.xz -C clang
          rm -rf clang+llvm-18.1.8-aarch64-linux-gnu.tar.xz 
          cd ..
      - name: Save Android toolchain
        if: steps.cache-build-env.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            clang
          key: ${{ runner.os }}-android-toolchain

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: kernel

      - name: Build kernel
        run: |
          export PATH="$(pwd)/clang/bin:$(pwd)/clang/aarch64-linux-gnu/bin:$(pwd)/clang/arm-linux-gnueabi/bin:$PATH"
          export LLVM_HOME=$(pwd)/clang/bin
          export PATH=$LLVM_HOME:$PATH
          cd kernel
          make ARCH=arm64 O=out CC=clang LD=ld.lld LLVM=1 CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CLANG_TRIPLE=aarch64-linux-gnu- vendor/lineageos_alpha_defconfig
          cd out && ../scripts/kconfig/merge_config.sh -m .config ../arch/arm64/configs/vendor/lineageos_alpha_defconfig && cd ..
          yes "" | make ARCH=arm64 O=out CC=clang LD=ld.lld LLVM=1 CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CLANG_TRIPLE=aarch64-linux-gnu- oldconfig
          make -j$(nproc --all) ARCH=arm64 O=out CC=clang LD=ld.lld LLVM=1 CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CLANG_TRIPLE=aarch64-linux-gnu- 2>&1 | tee build.log
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: kernel-aosp_flash
          path: kernel/out/arch/arm64/boot

      - name: Upload build log
        uses: actions/upload-artifact@v3
        with:
          name: build-log-aosp_flash
          path: kernel/build.log
